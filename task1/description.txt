Цвета:

Данное регулярное выражение на Python3 предназначено для проверки правильности записи цветов в различных форматах: RGB, HEX и HSL.

1. ^rgb\((?P<rgb_variant>(?P<numbers>(?P<num1>\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),\s*(?P<num2>P\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]),\s*(?P<num3>P\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))) - данная часть проверяет, что строка начинается с "rgb(", за которым следуют три числа, разделенные запятой и пробелом. Числа должны быть в диапазоне от 0 до 255.

2. |(?P<persents>(?P<per1>(\d|[1-9]\d|100)%),\s*(?P<per2>(\d|[1-9]\d|100)%),\s*(?P<per3>(\d|[1-9]\d|100)%))\) - данная часть проверяет, что строка может быть записана в виде процентов. Значения должны быть в диапазоне от 0% до 100%.

3. |^#(?P<color>(?P<hex_variant>(?P<two_color1>[\da-fA-F][\da-fA-F])(?P<two_color2>[\da-fA-F][\da-fA-F])(?P<two_color3>[\da-fA-F][\da-fA-F])|(?P<one_color1>[\da-fA-F])(?P<one_color2>[\da-fA-F])(?P<one_color3>[\da-fA-F])))$ - данная часть проверяет, что строка начинается с "#", за которым следуют шестнадцатеричные значения цветов. Цвет может быть записан как в виде трех двухзначных значений, так и в виде трех однозначных значений.

4. |^hsl\((?P<ton>\d|[1-9]\d|[12]\d\d|3[0-5]\d|360),\s*(?P<persent1>(?P<value1>\d|[1-9]\d|100)%),\s*(?P<persent2>(?P<value2>\d|[1-9]\d|100)%)\)$ - данная часть проверяет, что строка начинается с "hsl(", за которым следуют три значения: тон (от 0 до 360), процент насыщенности (от 0% до 100%) и процент освещенности (от 0% до 100%).

Таким образом, регулярное выражение проверяет правильность записи цветов в форматах RGB, HEX и HSL.



Пароли:

Данное регулярное выражение на Python3 предназначено для проверки сложности пароля. 

Регулярное выражение состоит из нескольких частей:

1. ^ - начало строки.

2. (?=.*[A-Z]) - положительное предварительное условие, которое проверяет, что в строке есть хотя бы одна заглавная буква.

3. (?=.*[a-z]) - положительное предварительное условие, которое проверяет, что в строке есть хотя бы одна строчная буква.

4. (?=.*\d) - положительное предварительное условие, которое проверяет, что в строке есть хотя бы одна цифра.

5. (?=(?:(?P<symbol>.)(?!(?P=symbol)))+$) - положительное предварительное условие, которое проверяет, что в строке следующий за текущим символ не повторяется.

6. (?=(.*(?P<spec_symbol>[\^$%@#&*!?]).*(?!(?P=spec_symbol))[\^$%@#&*!?])+) - положительное предварительное условие, которое проверяет, что в строке есть хотя бы два специальных символа из списка [\^$%@#&*!?], которые не повторяется.

7. [A-Za-z0-9^$%@#&*!?]{8,} - основное выражение, которое проверяет, что строка состоит из символов из списка [A-Za-z0-9^$%@#&*!?] и имеет длину от 8 и более символов.

8. $ - конец строки.

Таким образом, регулярное выражение проверяет, что пароль содержит хотя бы одну заглавную букву, одну строчную букву, одну цифру, один символ, который не повторяется, один специальный символ из списка [\^$%@#&*!?], и имеет длину от 8 и более символов.


Выражения:

Данное регулярное выражение на Python3 предназначено для разбора математических выражений. 

Регулярное выражение состоит из нескольких частей:

1. (?P<number>(0\.\d+)|([1-9]\d*(\.\d*)?)) - данная часть проверяет, что в строке есть число. Число может быть десятичным, целым или с плавающей точкой.

2. (?P<constant>(pi|e|sqrt2|ln2|ln10)(?![a-zA-Z_0-9])) - данная часть проверяет, что в строке есть константа. Константы могут быть pi, e, sqrt2, ln2, ln10.

3. (?P<function>(sin|cos|tg|ctg|tan|cot|sinh|cosh|th|cth|tanh|coth|ln|lg|log|exp|sqrt|cbrt|abs|sign)(?![a-zA-Z_0-9])) - данная часть проверяет, что в строке есть функция. Функции могут быть sin, cos, tg, ctg, tan, cot, sinh, cosh, th, cth, tanh, coth, ln, lg, log, exp, sqrt, cbrt, abs, sign.

4. (?P<operator>[\^\-\+\/\*]) - данная часть проверяет, что в строке есть оператор. Операторы могут быть ^, -, +, /, *.

5. (?P<left_parenthesis>\() - данная часть проверяет, что в строке есть открывающая скобка "(".

6. (?P<right_parenthesis>\)) - данная часть проверяет, что в строке есть закрывающая скобка ")".

7. (?P<variable>[a-zA-Z_][0-9a-zA-Z_]*) - данная часть проверяет, что в строке есть переменная. Переменные должны начинаться с буквы или символа "_", и могут содержать буквы, цифры или символ "_".

Таким образом, регулярное выражение разбирает математическое выражение на числа, константы, функции, операторы, скобки и переменные.


Даты:

Данное регулярное выражение на Python3 предназначено для проверки правильности записи дат в различных форматах: DD.MM.YYYY, DD-MM-YYYY, DD/MM/YYYY, YYYY.MM.DD, YYYY-MM-DD, YYYY/MM/DD, DD Month YYYY, Month DD, YYYY, и их комбинаций.

1. ^(((0?[1-9]|[12]\d|3[01])(?P<sep1>[\.\-\/])(0?[13578]|10|12)(?P=sep1)(\d+))|((0?[1-9]|[12]\d|30)(?P<sep2>[\.\-\/])(0?[469]|11)(?P=sep2)(\d+))|((0?[1-9]|1\d|2[0-8])(?P<sep3>[\.\-\/])(0?2)(?P=sep3)(\d+)))$ - данная часть проверяет, что строка может быть записана в формате DD.MM.YYYY, DD-MM-YYYY или DD/MM/YYYY. Дни могут быть от 01 до 31, месяцы от 01 до 12, а годы от 0000 до 9999.

2. |^(([1-9]\d*)(?P<sep4>[\.\-\/])(0?[13578]|1[02])(?P=sep4)(0?[1-9]|[12]\d|3[01])|(([1-9]\d*)(?P<sep5>[\.\-\/])(0?[469]|11)(?P=sep5)(0?[1-9]|[12]\d|30))|(([1-9]\d*)(?P<sep6>[\.\-\/])(0?2)(?P=sep6)(0?[1-9]|1\d|2[0-8])))$ - данная часть проверяет, что строка может быть записана в формате YYYY.MM.DD, YYYY-MM-DD или YYYY/MM/DD. Годы могут быть от 0000 до 9999, месяцы от 01 до 12, а дни от 01 до 31.

3. |^(((0?[1-9]|[12]\d|3[01])\s+(января|марта|мая|июля|августа|октября|декабря)\s+(\d+))|((0?[1-9]|[12]\d|30])\s+(апреля|июня|сентября|ноября)\s+(\d+))|((0?[1-9]|1\d|2[0-8])\s+(февраля)\s+(\d+)))$ - данная часть проверяет, что строка может быть записана в формате DD Month YYYY, где месяц указывается словами на русском языке. Дни могут быть от 01 до 31, месяцы указываются словами на русском языке. Годы могут быть любыми целыми числами.

4. |^(([Jj]an(uary?)|[Mm]ar(ch)?|[Mm]ay|[Jj]ul(y)?|[Aa]ug(ust)?|[Oo]ct(ober)?|[Dd]ec(ember)?)\s+(0?[1-9]|[12]\d|3[01])\,\s*(\d+))|(([Aa]pr(il)?|[Jj]un(e)?|[Ss]ep(tember)?|[Nn]ov(ember)?)\s+(0?[1-9]|[12]\d|30)\,\s*(\d+))|([Ff]eb(ruary)?\s+(0?[1-9]|1\d|2[0-8])\,\s*(\d+))$ - данная часть проверяет, что строка может быть записана в формате Month DD, где месяц указывается словами на английском языке. Месяцы указываются сокращенными или полными названиями на английском языке. Дни могут быть от 01 до 31, а годы любыми целыми числами.

5. |^((\d+)\,\s*([Jj]an(uary?)|[Mm]ar(ch)?|[Mm]ay|[Jj]ul(y)?|[Aa]ug(ust)?|[Oo]ct(ober)?|[Dd]ec(ember)?)\s+(0?[1-9]|[12]\d|3[01]))|((\d+)\,\s*([Aa]pr(il)?|[Jj]un(e)?|[Ss]ep(tember)?|[Nn]ov(ember)?)\s+(0?[1-9]|[12]\d|30))|((\d+)\,\s*[Ff]eb(ruary)?\s+(0?[1-9]|1\d|2[0-8]))$ - данная часть проверяет, что строка может быть записана в формате DD Month, где месяц указывается словами на английском языке. Месяцы указываются сокращенными или полными названиями на английском языке. Дни могут быть от 01 до 31, а годы любыми целыми числами.

Таким образом, регулярное выражение проверяет правильность записи дат в различных форматах.
